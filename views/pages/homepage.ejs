
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"
        integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">
    <link rel="stylesheet" href="css/estilos.css">
<style>
h1 {
    color: blue;
}

label {
    font-weight: bold;
    font-style: italic;
}

.jumbotron {
    min-height: 100vh;
}
</style>
<script type="text/javascript">
setTimeout(function sunrise () {
  document.getElementsByClassName('header')[0].style.backgroundColor = '#118798';
}, 0);
</script>

<div class="container mt-3">
  <div class="jumbotron">
      <h1>Ingrese Producto</h1>
      <br>

      <form id="formAgregarProducto" >
          <!-- Campo nombre del producto -->
          <div class="form-group">
              <label for="nombre">Nombre</label>
              <input id="nombre" class="form-control" type="text" name="title" required>
          </div>

          <!-- Campo precio del producto -->
          <div class="form-group">
              <label for="precio">Precio</label>
              <input id="precio" class="form-control" type="number" step="0.01" name="price" required>
          </div>

          <!-- Campo url de la foto del producto -->
          <div class="form-group">
              <label for="foto">Foto URL</label>
              <input id="foto" class="form-control" type="url" name="thumbnail">
          </div>

          <!-- Campo descripcion del producto -->
          <div class="form-group">
              <label for="descripcion">Descripcion</label>
              <input id="descripcion" class="form-control" type="text" name="descripcion>
          </div>
          <!-- Campo stock del producto -->
          <div class="form-group">
              <label for="stock">Stock</label>
              <input id="stock" class="form-control" type="number" name="stock">
          </div>

          <!-- Botón de envío -->
          <button class="btn btn-success mt-3">Agregar</button>
      </form>
      <br>
      <div id="productos"></div>
  </div>
</div>

<script>
    const productosApi = {
    get: () => {
        return fetch('/productos')
            .then(data => data.json())
    },
    post: (nuevoProd) => {
        const options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(nuevoProd)
        }
        return fetch('/productos', options)
    },
    put: (idProd, nuevoProd) => {
        const options = {
            method: 'PUT',
            body: JSON.stringify(nuevoProd),
            headers: {
                'Content-Type': 'application/json',
            }
        }
        return fetch(`/productos/${idProd}`, options)
    },
    delete: (idProd) => {
        const options = {
            method: 'DELETE'
        }
        return fetch(`/productos/${idProd}`, options)
    },
}

//-------------------------------------------------------------------
// productos

actualizarListaProductos()

const formAgregarProducto = document.getElementById('formAgregarProducto')
formAgregarProducto.addEventListener('submit', e => {
    e.preventDefault()
    const producto = leerProductoDelFormulario()
    productosApi.post(producto)
        .then(actualizarListaProductos())
        .then(() => {
            formAgregarProducto.reset()
        })
        .catch((err) => {
            alert(`mensaje ${err.message}`)
        })
});


function leerProductoDelFormulario() {
    const producto = {
        title: formAgregarProducto[0].value,
        price: formAgregarProducto[1].value,
        thumbnail: formAgregarProducto[2].value,
        descripcion: formAgregarProducto[3].value,
        stock: formAgregarProducto[4].value
    }
    return producto
}

function actualizarListaProductos() {
    return productosApi.get()
        .then(prods => makeHtmlTable(prods))
        .then(html => {
            document.getElementById('productos').innerHTML = html
        })
}

function borrarProducto(idProd) {
    productosApi.delete(idProd)
        .then(actualizarListaProductos)
}

function actualizarProducto(idProd) {
    const nuevoProd = leerProductoDelFormulario()
    productosApi.put(idProd, nuevoProd)
        .then(actualizarListaProductos)
}


function llenarFormulario(title = '', price = '', thumbnail = '', descripcion = '', stock = '') {
    formAgregarProducto[0].value = title
    formAgregarProducto[1].value = price
    formAgregarProducto[2].value = thumbnail
    formAgregarProducto[3].value = descripcion
    formAgregarProducto[4].value = stock
}

function makeHtmlTable(productos) {
    let html = `
        <style>
            .table td,
            .table th {
                vertical-align: middle;
            }
        </style>`

    if (productos.length > 0) {
        html += `
        <h2>Lista de Productos</h2>
        <div class="table-responsive">
            <table class="table table-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Precio</th>
                    <th>Foto</th>
                </tr>`
        for (const prod of productos) {
            html += `
                    <tr>
                    <td><a type="button" onclick="llenarFormulario('${prod.title}', '${prod.price}','${prod.thumbnail}')" title="copiar a formulario...">${prod.title}</a></td>
                    <td>$${prod.price}</td>
                    <td><img width="50" src=${prod.thumbnail} alt="not found"></td>
                    <td><a type="button" onclick="borrarProducto('${prod.id}')">borrar</a></td>
                    <td><a type="button" onclick="actualizarProducto('${prod.id}')">actualizar</a></td>
                    </tr>`
        }
        html += `
            </table>
        </div >`
    }
    return Promise.resolve(html)
}
</script>